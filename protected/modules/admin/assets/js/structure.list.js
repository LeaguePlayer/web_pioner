// Generated by CoffeeScript 1.6.3
(function() {
  var $grid, checkboxes, moveButtons;

  $grid = $('#structure-grid');

  $('a.delete-node', $grid).on('click', function(e) {
    if (!confirm('Вы уверены, что хотите удалить раздел?')) {
      $(this).closest('.btn-group').removeClass('open');
      return false;
    }
  });

  $('a.expand-button', $grid).on('click', function(e) {
    var childrenlist, _this;
    _this = $(this);
    childrenlist = _this.closest('li').children('ul');
    if (_this.hasClass('open')) {
      childrenlist.hide();
      _this.removeClass('open').find('i').attr('class', 'icon-plus');
    } else {
      childrenlist.show();
      _this.addClass('open').find('i').attr('class', 'icon-minus');
    }
    return false;
  });

  checkboxes = $('input:checkbox', $grid);

  moveButtons = $('.actions .btn');

  checkboxes.click(function(e) {
    var self;
    self = $(this);
    if (self.prop('checked')) {
      checkboxes.not(self).prop('checked', false);
    }
    if (checkboxes.filter(':checked').size() > 0) {
      return moveButtons.removeClass('disabled');
    } else {
      return moveButtons.addClass('disabled');
    }
  });

  moveButtons.on('click', function(e) {
    var row, self;
    self = $(this);
    row = checkboxes.filter(':checked').closest('.row');
    if (row.size() <= 0 || self.hasClass('disabled')) {
      return false;
    }
    $.ajax({
      url: self.attr('href'),
      dataType: 'json',
      type: 'POST',
      data: {
        id: row.data('id')
      },
      success: function(data) {
        var item, nextRow, prevRow, ul;
        if (data.success) {
          item = row.closest('li');
          switch (data.action) {
            case 'down':
              return item.next('li').after(item.detach());
            case 'up':
              return item.prev('li').before(item.detach());
            case 'toNext':
              nextRow = $('.row', item.next('li')).first();
              ul = nextRow.next('ul').show();
              if (ul.size() <= 0) {
                ul = $('<ul />');
                nextRow.after(ul);
              }
              ul.prepend(item.detach());
              $('.cell.name', item).prepend('<span class="offset"></span>');
              return $('.expand-button', nextRow).first().addClass('open').find('i').attr('class', 'icon-minus');
            case 'toParent':
              ul = item.closest('ul');
              prevRow = ul.prev('.row');
              ul.closest('li').before(item.detach());
              $('.cell.name', item).each(function(index) {
                return $('.offset', $(this)).first().remove();
              });
              if ($('li', ul).size() <= 0) {
                ul.remove();
                return $('.expand-button', prevRow).first().remove();
              }
          }
        }
      }
    });
    return false;
  });

}).call(this);

/*
//@ sourceMappingURL=structure.list.map
*/
